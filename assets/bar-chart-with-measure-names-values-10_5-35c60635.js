import{g as I,C as p,a as y,l as u,b as V}from"./number-formatting-70b2729e.js";import"./auto.esm-c3926bfe.js";import{C as k,p as N}from"./chartjs-plugin-datalabels.esm-3e57def8.js";const w=console;k.register(N);let E;const S=["red","green","blue"],f={0:"color",1:"accordion.Color2",2:"accordion.datalabels"};function R(e,a){const l=u.findIndex(a.columns,n=>e.id===n);return[...new Set(u.map(a.dataValue,n=>n[l]))]}function b(e,a){const l=u.findIndex(a.columns,n=>e.id===n);return u.map(a.dataValue,n=>n[l])}function A(e,a,l,n){if(l&&n){const r=u.findIndex(a.columns,o=>l.id===o),c=u.findIndex(a.columns,o=>n.id===o),i=u.filter(a.dataValue,o=>o[c]===e.name);return u.map(i,o=>o[r])}const t=u.findIndex(a.columns,r=>e.id===r);return u.map(a.dataValue,r=>r[t])}function U(e,a,l,n){var C,x,M;const t=((C=e==null?void 0:e.find(s=>s.key==="x"))==null?void 0:C.columns)??[],r=((x=e==null?void 0:e.find(s=>s.key==="y"))==null?void 0:x.columns)??[],c=((M=e==null?void 0:e.find(s=>s.key==="measureValues"))==null?void 0:M.columns)??[];let i=[],o;r.forEach(s=>{t[0].chartSpecificColumnType!==y.MEASURE_NAMES&&s.chartSpecificColumnType===y.MEASURE_VALUES?(o=s,i=i.concat(c)):i.push(s)});const h=t.find(s=>s.chartSpecificColumnType===y.MEASURE_NAMES),g=u.map(c,"id");return{getLabels:()=>R(t[0],a),getDatasets:()=>{const s=m=>o&&g.includes(m.id)?`${l}-y${o.id.toString()}`:`${l}-y${m.id.toString()}`;return u.map(i,(m,d)=>({label:m.name,data:g.includes(m.id)?A(m,a,o,h):b(m,a),yAxisID:s(m),type:`${l}`,backgroundColor:u.get(n,f==null?void 0:f[d],S[d]),borderColor:u.get(n,f==null?void 0:f[d],S[d]),datalabels:{anchor:"end"}}))},getScales:()=>u.reduce(r,(s,m,d)=>(s[`${l}-y${m.id.toString()}`]={grid:{display:!0},position:d===0?"left":"right",title:{display:!0,text:`${m.name}`}},s),{}),getPointDetails:(s,m)=>{const d=i[m],T=g.includes(d.id)?A(d,a,o,h):b(d,a);return[{columnId:t[0].id,value:b(t[0],a)[s]},{columnId:d.id,value:T[s]}]}}}function $(e){var l,n,t;return U(((n=(l=e.config)==null?void 0:l.chartConfig)==null?void 0:n[0].dimensions)??[],((t=e.data)==null?void 0:t[0].data)??[],"bar",e.visualProps)}function F(e){return u.pick(e.native,["clientX","clientY"])}function L(e){const a=e.getChartModel(),l=$(a),n=u.get(a.visualProps,f[2],!1);if(l)try{let t;e.containerEl?(t=document.createElement("canvas"),t.style.cssText="width: 100%; height: 100%;",e.containerEl.appendChild(t)):t=document.getElementById("chart"),t.getContext("2d").clearRect(0,0,t.width,t.height),E=new k(t,{type:"bar",data:{labels:l.getLabels(),datasets:l.getDatasets()},options:{scales:l.getScales(),animation:{duration:0},plugins:{datalabels:{display:n,color:"blue",labels:{title:{font:{weight:"bold"}},value:{color:"green"}}}},maintainAspectRatio:!1,interaction:{mode:"point",intersect:!0},onClick:r=>{const c=r.chart.getActiveElements()[0],i=c.index,o=c.datasetIndex;w.info("ChartPoint",i,o,l.getPointDetails(i,o)),e.emitEvent(p.OpenContextMenu,{event:F(r),clickedPoint:{tuple:l.getPointDetails(i,o)}})}}})}catch(t){throw w.error("renderfailed",t),t}}const v=async e=>{E&&E.destroy();try{e.emitEvent(p.RenderStart),L(e)}catch(a){e.emitEvent(p.RenderError,{hasError:!0,error:a})}finally{e.emitEvent(p.RenderComplete)}};(async()=>{const e=await I({allowedConfigurations:{allowColumnConditionalFormatting:!1,allowColumnNumberFormatting:!1,allowMeasureNamesAndValues:!0},chartConfigParameters:{measureNameValueColumns:{enableMeasureNameColumn:!0,enableMeasureValueColumn:!0,measureNameColumnAlias:"Measure Name",measureValueColumnAlias:"Measure Value"}},getDefaultChartConfig:a=>{const l=a.columns,n=l.find(C=>C.chartSpecificColumnType===y.MEASURE_NAMES),t=l.find(C=>C.chartSpecificColumnType===y.MEASURE_VALUES),r=u.filter(l,C=>C.type===V.MEASURE),c=u.filter(l,C=>C.type===V.ATTRIBUTE),i=n?[...c.splice(0,1),n]:[c[0]],o=t?[t]:r.slice(0,3),h=t?r.slice(0,3):[];return[{key:"column",dimensions:[{key:"x",columns:i},{key:"y",columns:o},{key:"measureValues",columns:h}]}]},getQueriesFromChartConfig:a=>a.map(n=>u.reduce(n.dimensions,(t,r)=>({queryColumns:[...t.queryColumns,...r.columns.map(c=>({...c,isMeasureValue:r.key==="measureValues"}))]}),{queryColumns:[]})),renderChart:a=>v(a),chartConfigEditorDefinition:[{key:"column",label:"Custom Column",descriptionText:"X Axis can only have 1 attribute and measure name, Y Axis can only have measures and measure value. Custom measure values should have atleast 1 measure column.measure name column and measure value column is mandatory.",columnSections:[{key:"x",label:"Custom X Axis",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!0,allowMeasureNameColumn:!0,allowMeasureValueColumn:!1,maxColumnCount:2},{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1,allowMeasureNameColumn:!1,allowMeasureValueColumn:!0},{key:"measureValues",label:"Custom measure values",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1,allowMeasureNameColumn:!1,allowMeasureValueColumn:!1}]}],visualPropEditorDefinition:{elements:[{key:"color",type:"radio",defaultValue:"red",values:["red","green","yellow"],label:"Colors"},{type:"section",key:"accordion",label:"Accordion",children:[{key:"Color2",type:"radio",defaultValue:"blue",values:["blue","white","red"],label:"Color2"},{key:"datalabels",type:"toggle",defaultValue:!1,label:"Data Labels"}]}]}});v(e)})();
