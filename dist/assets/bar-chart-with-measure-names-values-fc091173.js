import{g as I,C as g,a as y,l as o,b as S}from"./number-formatting-70b2729e.js";import"./auto.esm-c3926bfe.js";import{C as k,p as R}from"./chartjs-plugin-datalabels.esm-3e57def8.js";const M=console;k.register(R);let E;const V=["red","green","blue"],f={0:"color",1:"accordion.Color2",2:"accordion.datalabels"};function N(e,t){const l=o.findIndex(t.columns,n=>e.id===n);return[...new Set(o.map(t.dataValue,n=>n[l]))]}function b(e,t){const l=o.findIndex(t.columns,n=>e.id===n);return o.map(t.dataValue,n=>n[l])}function A(e,t,l,n){if(l&&n){const r=o.findIndex(t.columns,s=>l.id===s),c=o.findIndex(t.columns,s=>n.id===s),i=o.filter(t.dataValue,s=>s[c]===e.name);return o.map(i,s=>s[r])}const a=o.findIndex(t.columns,r=>e.id===r);return o.map(t.dataValue,r=>r[a])}function U(e,t,l,n){var C,x,w;const a=((C=e==null?void 0:e.find(u=>u.key==="x"))==null?void 0:C.columns)??[],r=((x=e==null?void 0:e.find(u=>u.key==="y"))==null?void 0:x.columns)??[],c=((w=e==null?void 0:e.find(u=>u.key==="measureValues"))==null?void 0:w.columns)??[];let i=[],s;r.forEach(u=>{a[0].chartSpecificColumnType!==y.MEASURE_NAMES&&u.chartSpecificColumnType===y.MEASURE_VALUES?(s=u,i=i.concat(c)):i.push(u)});const h=a.find(u=>u.chartSpecificColumnType===y.MEASURE_NAMES),p=o.map(c,"id");return{getLabels:()=>N(a[0],t),getDatasets:()=>{const u=m=>s&&p.includes(m.id)?`${l}-y${s.id.toString()}`:`${l}-y${m.id.toString()}`;return o.map(i,(m,d)=>({label:m.name,data:p.includes(m.id)?A(m,t,s,h):b(m,t),yAxisID:u(m),type:`${l}`,backgroundColor:o.get(n,f==null?void 0:f[d],V[d]),borderColor:o.get(n,f==null?void 0:f[d],V[d]),datalabels:{anchor:"end"}}))},getScales:()=>o.reduce(r,(u,m,d)=>(u[`${l}-y${m.id.toString()}`]={grid:{display:!0},position:d===0?"left":"right",title:{display:!0,text:`${m.name}`}},u),{}),getPointDetails:(u,m)=>{const d=i[m],T=p.includes(d.id)?A(d,t,s,h):b(d,t);return[{columnId:a[0].id,value:b(a[0],t)[u]},{columnId:d.id,value:T[u]}]}}}function $(e){var l,n,a;return U(((n=(l=e.config)==null?void 0:l.chartConfig)==null?void 0:n[0].dimensions)??[],((a=e.data)==null?void 0:a[0].data)??[],"bar",e.visualProps)}function F(e){return o.pick(e.native,["clientX","clientY"])}function L(e){const t=e.getChartModel(),l=$(t),n=o.get(t.visualProps,f[2],!1);if(l)try{let a;e.containerEl?(a=document.createElement("canvas"),a.style.cssText="width: 100%; height: 100%;",e.containerEl.appendChild(a)):a=document.getElementById("chart"),a.getContext("2d").clearRect(0,0,a.width,a.height),E=new k(a,{type:"bar",data:{labels:l.getLabels(),datasets:l.getDatasets()},options:{scales:l.getScales(),animation:{duration:0},plugins:{datalabels:{display:n,color:"blue",labels:{title:{font:{weight:"bold"}},value:{color:"green"}}}},maintainAspectRatio:!1,interaction:{mode:"point",intersect:!0},onClick:r=>{const c=r.chart.getActiveElements()[0],i=c.index,s=c.datasetIndex;M.info("ChartPoint",i,s,l.getPointDetails(i,s)),e.emitEvent(g.OpenContextMenu,{event:F(r),clickedPoint:{tuple:l.getPointDetails(i,s)}})}}})}catch(a){throw M.error("renderfailed",a),a}}const v=async e=>{E&&E.destroy();try{e.emitEvent(g.RenderStart),L(e)}catch(t){e.emitEvent(g.RenderError,{hasError:!0,error:t})}finally{e.emitEvent(g.RenderComplete)}};(async()=>{const e=await I({allowedConfigurations:{allowColumnConditionalFormatting:!1,allowColumnNumberFormatting:!1,allowMeasureNamesAndValues:!0},getDefaultChartConfig:t=>{const l=t.columns,n=l.find(C=>C.chartSpecificColumnType===y.MEASURE_NAMES),a=l.find(C=>C.chartSpecificColumnType===y.MEASURE_VALUES),r=o.filter(l,C=>C.type===S.MEASURE),c=o.filter(l,C=>C.type===S.ATTRIBUTE),i=n?[...c.splice(0,1),n]:[c[0]],s=a?[a]:r.slice(0,3),h=a?r.slice(0,3):[];return[{key:"column",dimensions:[{key:"x",columns:i},{key:"y",columns:s},{key:"measureValues",columns:h}]}]},getQueriesFromChartConfig:t=>t.map(n=>o.reduce(n.dimensions,(a,r)=>({queryColumns:[...a.queryColumns,...r.columns.map(c=>({...c,isMeasureValue:r.key==="measureValues"}))]}),{queryColumns:[]})),renderChart:t=>v(t),chartConfigEditorDefinition:[{key:"column",label:"Custom Column",descriptionText:"X Axis can only have 1 attribute and measure name, Y Axis can only have measures and measure value. Custom measure values should have atleast 1 measure column.measure name column and measure value column is mandatory.",columnSections:[{key:"x",label:"Custom X Axis",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!0,allowMeasureNameColumn:!0,allowMeasureValueColumn:!1,maxColumnCount:2},{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1,allowMeasureNameColumn:!1,allowMeasureValueColumn:!0},{key:"measureValues",label:"Custom measure values",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1,allowMeasureNameColumn:!1,allowMeasureValueColumn:!1}]}],visualPropEditorDefinition:{elements:[{key:"color",type:"radio",defaultValue:"red",values:["red","green","yellow"],label:"Colors"},{type:"section",key:"accordion",label:"Accordion",children:[{key:"Color2",type:"radio",defaultValue:"blue",values:["blue","white","red"],label:"Color2"},{key:"datalabels",type:"toggle",defaultValue:!1,label:"Data Labels"}]}]}});v(e)})();
