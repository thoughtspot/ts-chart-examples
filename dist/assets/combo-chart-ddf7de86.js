import{l as d,g as Y,C as k,a as D}from"./index-ae8788bc.js";import"./auto.esm-c3926bfe.js";import{C as P,p as B}from"./chartjs-plugin-datalabels.esm-3e57def8.js";const $=(e,l)=>{const i=document.getElementById(l);let t=i.querySelector("ul");return t||(t=document.createElement("ul"),t.style.display="flex",t.style.flexDirection="column",t.style.margin="0",t.style.padding="0",t.style.height="95vh",t.style.overflowY="overlay",t.style.alignItems="end",t.style.paddingRight="10px",i.appendChild(t)),t},R={id:"htmlLegendPlugin",afterUpdate(e,l,i){const t=$(e,"legend");for(;t.firstChild;)t.firstChild.remove();const r={bar:[],line:[],stack:[],scatter:[]};e.options.plugins.legend.labels.generateLabels(e).forEach(o=>{switch(o.text.split("- ")[1]){case"bar":r.bar.push(o);break;case"line":r.line.push(o);break;case"bar-stack":r.stack.push(o);break;case"scatter":r.scatter.push(o);break}}),d.entries(r).forEach(o=>{const m=document.createElement("div");m.innerHTML=`<p style="padding-bottom: '10px';">${o[0].charAt(0).toUpperCase()+o[0].slice(1)}</p>`,o[1].forEach(n=>{const s=document.createElement("li");s.style.alignItems="center",s.style.cursor="pointer",s.style.display="flex",s.style.flexDirection="row",s.style.marginLeft="10px",s.style.marginBottom="10px",s.onclick=()=>{const{type:f}=e.config;f==="pie"||f==="doughnut"?e.toggleDataVisibility(n.index):e.setDatasetVisibility(n.datasetIndex,!e.isDatasetVisible(n.datasetIndex)),e.update()};const a=document.createElement("span");a.style.background=n.fillStyle,a.style.borderColor=n.strokeStyle,a.style.borderWidth=n.lineWidth+"px",a.style.display="inline-block",a.style.flexShrink="0",a.style.height="10px",a.style.marginRight="10px",a.style.width="10px",a.style.borderRadius="100%";const c=document.createElement("p");c.style.color=n.fontColor,c.style.margin="0",c.style.padding="0",c.style.textDecoration=n.hidden?"line-through":"",c.style.fontFamily="sans-serif",c.style.fontSize="14px";const g=document.createTextNode(n.text.split("- ")[0]);c.appendChild(g),s.appendChild(a),s.appendChild(c),t.appendChild(m),m.appendChild(s)})})}},V=console;P.register(B);let v;const I=["datalabels","hideLegend"],T=["#FF0000","#00FF00","#0000FF","#FFFF00","#FF00FF","#00FFFF","#FF4500","#8A2BE2","#32CD32","#1E90FF","#FFD700","#9932CC","#8B0000","#228B22","#008080","#FF6347","#40E0D0","#800080","#2E8B57","#FF8C00","#8B4513","#008B8B","#FF69B4","#7CFC00","#4169E1","#FF1493","#ADFF2F","#800000","#20B2AA","#F08080"],C={bar:"bar",line:"line",stack:"bar-stack",scatter:"scatter"};function b(e,l){const i=d.findIndex(l.columns,t=>e.id===t);return d.uniq(d.map(l.dataValue,t=>t[i]))}function q(e,l){const i=d.findIndex(l.columns,t=>e.id===t);return d.uniq(d.map(l.dataValue,t=>t[i]))}function X(e,l,i){const t=d.findIndex(l.columns,r=>e.id===r);return l.dataValue.filter(r=>r[2]===i).map(r=>r[t])}function w(e,l,i){var n;const t=(e==null?void 0:e[0].columns)??[],r=(e==null?void 0:e[1].columns)??[],u=((n=e==null?void 0:e[2])==null?void 0:n.columns[0])??[],o=i.split("-")[0],m=i.split("-").length>1;return{getLabels:()=>b(t[0],l),getDatasets:()=>d.isEmpty(u)?d.map(r,(s,a)=>({label:`${s.name}- ${i}`,data:b(s,l),stack:`${o}-x0${m?"-stacked":"y"+a.toString()}`,type:`${o}`,backgroundColor:"",borderColor:"",yPos:a,datalabels:{anchor:"end"}})):d.map(q(u,l),(s,a)=>({label:`${s}- ${i}`,data:X(r[0],l,s),type:`${o}`,stack:`${o}-x0${m?"-stacked":"y"+a.toString()}`,yPos:a,backgroundColor:"",borderColor:"",datalabels:{anchor:"end"}})),getPointDetails:(s,a)=>(console.log(o),d.isEmpty(u)?[{columnId:t[0].id,value:b(t[0],l)[s]},{columnId:r[a].id,value:b(r[a],l)[s]}]:[{columnId:u.id,value:b(u,l)[a]},{columnId:t[0].id,value:b(t[0],l)[s]},{columnId:r[0].id,value:b(r[0],l)[s]}])}}function W(e){var o,m,n,s,a,c,g,f,x,F,S,E,A,M;const l=(m=(o=e.config)==null?void 0:o.chartConfig)==null?void 0:m[0].dimensions.filter(y=>y.key==="x")[0],i=w(((s=(n=e.config)==null?void 0:n.chartConfig)==null?void 0:s[0].dimensions)??[],((a=e.data)==null?void 0:a[0].data)??[],C.bar),t=w([l,...(g=(c=e.config)==null?void 0:c.chartConfig)==null?void 0:g[1].dimensions],((f=e.data)==null?void 0:f[1].data)??[],C.line),r=w([l,...(F=(x=e.config)==null?void 0:x.chartConfig)==null?void 0:F[2].dimensions],((S=e.data)==null?void 0:S[2].data)??[],C.stack),u=w([l,...(A=(E=e.config)==null?void 0:E.chartConfig)==null?void 0:A[3].dimensions],((M=e.data)==null?void 0:M[3].data)??[],C.scatter);return{getLabels:i.getLabels,getDatasets:()=>{const y=[...i.getDatasets(),...t.getDatasets(),...r.getDatasets(),...u.getDatasets()];return y.forEach((h,p)=>{h.backgroundColor=T[p%30],h.borderColor=T[p%30]}),y},getPointDetails:(y,h,p)=>{if(p===C.bar)return i.getPointDetails(y,h);if(p===C.line)return t.getPointDetails(y,h);if(p===C.stack)return r.getPointDetails(y,h);if(p===C.scatter)return u.getPointDetails(y,h)}}}function j(e){return d.pick(e.native,["clientX","clientY"])}function O(e){const l=e.getChartModel(),i=W(l),t=d.get(l.visualProps,I[0],!1),r=d.get(l.visualProps,I[1],!0);if(i)try{const u=document.getElementById("chart"),o=document.getElementById("legend"),m=document.getElementById("chartWrapper");r?(o.style.display="unset",m.style.width="85%"):(o.style.display="none",m.style.width="100%"),u.getContext("2d").clearRect(0,0,u.width,u.height),v=new P(u,{type:"bar",data:{labels:i.getLabels(),datasets:i.getDatasets()},options:{animation:{duration:0},plugins:{datalabels:{display:t?"auto":!1,color:"blue",textStrokeColor:"white",textStrokeWidth:5,labels:{title:{font:{weight:"bold"}},value:{color:"black"}}},legend:{display:!1}},maintainAspectRatio:!1,interaction:{mode:"point",intersect:!0},onClick:n=>{const s=n.chart.getActiveElements()[0];if(!s){e.emitEvent(k.CloseContextMenu);return}const a=s==null?void 0:s.index;let{type:c,stack:g,yPos:f}=s==null?void 0:s.element.$datalabels[0].$context.dataset;const x=f;g.includes("stack")&&(c="bar-stack"),V.info("ChartPoint",a,x,i.getPointDetails(a,x)),e.emitEvent(k.OpenContextMenu,{event:j(n),clickedPoint:{tuple:i.getPointDetails(a,x,c)}})}},plugins:[R]})}catch(u){throw V.error("renderfailed",u),u}}const L=async e=>{v&&v.destroy();try{e.emitEvent(k.RenderStart),O(e)}catch(l){e.emitEvent(k.RenderError,{hasError:!0,error:l})}finally{e.emitEvent(k.RenderComplete)}};(async()=>{const e=await Y({getDefaultChartConfig:l=>{const i=l.columns,t=d.filter(i,o=>o.type===D.MEASURE);return[{key:"column",dimensions:[{key:"x",columns:[d.filter(i,o=>o.type===D.ATTRIBUTE)[0]]},{key:"y",columns:t.slice(0,2)}]},{key:"line",dimensions:[{key:"y",columns:t.slice(0,2)}]},{key:"stacked-column",dimensions:[{key:"y",columns:t.slice(0,2)}]},{key:"scatter",dimensions:[{key:"y",columns:t.slice(0,2)}]}]},getQueriesFromChartConfig:l=>{const i=l[0].dimensions.filter(r=>r.key==="x")[0].columns;return l.map(r=>d.reduce(r.dimensions,(u,o)=>o.key==="x"?u:{queryColumns:[...u.queryColumns,...o.columns]},{queryColumns:[i[0]]}))},renderChart:l=>L(l),chartConfigEditorDefinition:[{key:"column",label:"Custom Column",descriptionText:"X Axis can only have attributes, Y Axis can only have measures, Color can only have attributes. Should have just 1 column in Y axis with colors columns.",columnSections:[{key:"x",label:"Custom X Axis",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!0,maxColumnCount:1},{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1},{key:"legend",label:"Slice with color",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!1}]},{key:"line",label:"Custom Line",descriptionText:"X Axis can only have attributes, Y Axis can only have measures, Color can only have attributes. Should have just 1 column in Y axis with colors columns.",columnSections:[{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1},{key:"legend",label:"Slice with color",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!1}]},{key:"stacked-column",label:"Custom Stacked Column",descriptionText:"X Axis can only have attributes, Y Axis can only have measures, Color can only have attributes. Should have just 1 column in Y axis with colors columns.",columnSections:[{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1},{key:"legend",label:"Slice with color",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!1}]},{key:"scatter",label:"Custom Scatter",descriptionText:"X Axis can only have attributes, Y Axis can only have measures, Color can only have attributes. Should have just 1 column in Y axis with colors columns.",columnSections:[{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1},{key:"legend",label:"Slice with color",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!1}]}],visualPropEditorDefinition:{elements:[{key:"datalabels",type:"toggle",defaultValue:!1,label:"Data Labels"},{key:"hideLegend",type:"toggle",defaultValue:!0,label:"Legends"}]},validateConfig:(l,i)=>{if(l.length<=0)return{isValid:!1,validationErrorMessage:["invalid config. no config found"]};const t=l[0],r=l.map(n=>({type:n.key,dimensions:n.dimensions})).map(n=>({axis:n.dimensions.filter(a=>a.key==="y")[0],type:n.type})),u=()=>{const n={isValid:!0,errorMessage:void 0};for(const s of l){const a=s.dimensions.find(c=>c.key==="legend");if(a&&a.columns.length>0){const c=s.dimensions.find(g=>g.key==="y");if(!c||c.columns.length!==1)return n.isValid=!1,n.errorMessage=`Invalid config. Y axis column should not be empty for ${s.key} chart while slicing with an attribute`,n}}return n},o=()=>t.dimensions[0].columns.length===0?{isValid:!1,errorMessage:"Invalid config. X axis columns cannot be empty"}:{isValid:!0},m=()=>d.find(r,n=>n.axis.columns.length!==0)?{isValid:!0}:{isValid:!1,errorMessage:"Invalid config. Y axis column cannot be empty (need one y-axis column for any of the chart type)"};return!o().isValid||!m().isValid||!u().isValid?{isValid:!1,validationErrorMessage:[o().errorMessage||m().errorMessage||u().errorMessage]}:{isValid:!0}}});L(e)})();
