import{l as f,O as D,g as M,C as p,b as C}from"./number-formatting-70b2729e.js";import{a as P,g as S}from"./conditional-formatting-ba2c9fe8.js";import"./auto.esm-c3926bfe.js";import{C as B,p as I}from"./chartjs-plugin-datalabels.esm-3e57def8.js";const x={0:"color",1:"accordion.Color2",2:"accordion.datalabels"},F=["red","green","blue"];function U(l,t,o,n,a,e,s){var b,h,y;const r=o===1&&((b=t==null?void 0:t.accordion)==null?void 0:b.datalabels)===!1,u=(h=l==null?void 0:l.chartColorPalettes)!=null&&h.length&&(l==null?void 0:l.chartColorPalettes[0].colors.length)>0?l==null?void 0:l.chartColorPalettes[0].colors:f.get(t,r?null:x==null?void 0:x[o],F[o]),i=P(e,s,n,a);let d=(y=i==null?void 0:i.solidBackgroundAttrs)==null?void 0:y.color;return i!=null&&i.plotAsBand&&(d=null),d??u}function $(l,t){var a;const o=[],n=[];return(a=l==null?void 0:l.rows)==null||a.forEach(e=>{var u,i,d;const s=e!=null&&e.value?parseFloat(e.value):null,r=(u=e==null?void 0:e.solidBackgroundAttrs)==null?void 0:u.color;if((e==null?void 0:e.operator)===D.IsBetween){const b=((i=e==null?void 0:e.rangeValues)==null?void 0:i.min)??null,h=((d=e==null?void 0:e.rangeValues)==null?void 0:d.max)??null;b!==null&&h!==null&&(o.push({value:b,axisId:t,color:r,fill:e==null?void 0:e.plotAsBand},{value:h,axisId:t,color:r,fill:e==null?void 0:e.plotAsBand}),e!=null&&e.plotAsBand&&n.push({from:b,to:h,axisId:t,color:r}))}else s!==null&&o.push({value:s,axisId:t,color:r,fill:e==null?void 0:e.plotAsBand})}),{plotlines:o,plotbands:n}}function Y(l){return{id:"cfPlotlinePlugin",beforeDraw(t){const o=t.ctx;l.getDatasets().forEach(n=>{const a=n.plotlines,e=n.yAxisID;a==null||a.forEach(s=>{const u=t.scales[e].getPixelForValue(s.value);o.strokeStyle=s.color||"white",o.lineWidth=1,o.beginPath(),o.moveTo(t.chartArea.left,u),o.lineTo(t.chartArea.right,u),o.stroke()})})}}}function q(l){return{id:"cfPlotbandPlugin",beforeDraw(t){const o=t.ctx,n=t.chartArea;l.getDatasets().forEach(a=>{const e=a.plotbands,s=a.yAxisID;e==null||e.forEach(r=>{const u=t.scales[s],i=u.getPixelForValue(r.from),d=u.getPixelForValue(r.to);o.fillStyle=r.color||"white",o.beginPath(),o.moveTo(n.left,i),o.lineTo(n.right,i),o.lineTo(n.right,d),o.lineTo(n.left,d),o.closePath(),o.fill()})})}}}const V=console;B.register(I);let E;const L=l=>l>1e9?(l/1e9).toFixed(2)+"B":l>1e6?(l/1e6).toFixed(2)+"M":l>1e3?(l/1e3).toFixed(2)+"K":l;function k(l,t){const o=f.findIndex(t.columns,n=>l.id===n);return f.map(t.dataValue,n=>n[o])}function X(l,t,o,n){const a=(l==null?void 0:l[0].columns)??[],e=(l==null?void 0:l[1].columns)??[];return{getLabels:()=>k(a[0],t),getDatasets:()=>f.map(e,(s,r)=>{var g,w,T,A;const u=k(s,t),i=S(s),d=`${o}-y${r.toString()}`,b=u.map((j,R)=>U(null,n,r,t,i,R,s.id)),{plotlines:h,plotbands:y}=$(i,d),m=Number((w=(g=n==null?void 0:n.columnVisualProps)==null?void 0:g[s.id])==null?void 0:w.borderRadius)||2,c=Number((A=(T=n==null?void 0:n.columnVisualProps)==null?void 0:T[s.id])==null?void 0:A.borderThickness)||2;return{label:s.name,data:u,yAxisID:d,type:`${o}`,backgroundColor:b,borderColor:"blue",borderRadius:m,borderWidth:c,datalabels:{anchor:"end"},plotlines:h,plotbands:y}}),getScales:()=>f.reduce(e,(s,r,u)=>(s[`${o}-y${u.toString()}`]={grid:{display:!0},position:u===0?"left":"right",title:{display:!0,text:`${r.name}`}},s),{}),getPointDetails:(s,r)=>[{columnId:a[0].id,value:k(a[0],t)[s]},{columnId:e[r].id,value:k(e[r],t)[s]}]}}function N(l){var o,n,a;return X(((n=(o=l.config)==null?void 0:o.chartConfig)==null?void 0:n[0].dimensions)??[],((a=l.data)==null?void 0:a[0].data)??[],"bar",l.visualProps)}function O(l){return f.pick(l.native,["clientX","clientY"])}function W(l){const t=l.getChartModel(),o=N(t),n=f.get(t.visualProps,x[2],!1);if(o)try{const a=document.getElementById("chart");a.getContext("2d").clearRect(0,0,a.width,a.height),E=new B(a,{type:"bar",data:{labels:o.getLabels(),datasets:o.getDatasets()},options:{scales:o.getScales(),animation:{duration:0},plugins:{datalabels:{display:n?"auto":!1,formatter:e=>L(e),color:"blue",textStrokeColor:"white",textStrokeWidth:5,labels:{title:{font:{weight:"bold"}},value:{color:"black"}}}},maintainAspectRatio:!1,interaction:{mode:"point",intersect:!0},onClick:e=>{const s=e.chart.getActiveElements()[0],r=s.index,u=s.datasetIndex;V.info("ChartPoint",r,u,o.getPointDetails(r,u)),typeof(t==null?void 0:t.visualProps)=="object"&&l.emitEvent(p.UpdateVisualProps,{visualProps:{...t==null?void 0:t.visualProps,clientState:JSON.stringify({x:r,y:u})}}),l.emitEvent(p.OpenContextMenu,{event:O(e),clickedPoint:{tuple:o.getPointDetails(r,u)}})}},plugins:[Y(o),q(o)]})}catch(a){throw V.error("renderfailed",a),a}}const v=async l=>{E&&E.destroy();try{l.emitEvent(p.RenderStart),W(l)}catch(t){l.emitEvent(p.RenderError,{hasError:!0,error:t})}finally{l.emitEvent(p.RenderComplete)}};(async()=>{const l=await M({getDefaultChartConfig:t=>{const o=t.columns,n=f.filter(o,s=>s.type===C.MEASURE);return[{key:"column",dimensions:[{key:"x",columns:[f.filter(o,s=>s.type===C.ATTRIBUTE)[0]]},{key:"y",columns:n.slice(0,2)}]}]},getQueriesFromChartConfig:t=>t.map(n=>f.reduce(n.dimensions,(a,e)=>({queryColumns:[...a.queryColumns,...e.columns]}),{queryColumns:[]})),renderChart:t=>v(t),chartConfigEditorDefinition:(t,o)=>{var r,u;const{config:n,visualProps:a}=t,e=(u=(r=n==null?void 0:n.chartConfig)==null?void 0:r[0])==null?void 0:u.dimensions.find(i=>i.key==="y"&&i.columns),s=[{key:"column",label:"Custom Column",descriptionText:"X Axis can only have attributes, Y Axis can only have measures, Color can only have attributes. Should have just 1 column in Y axis with colors columns.",columnSections:[{key:"x",label:"Custom X Axis",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!0,maxColumnCount:1e4},{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1}]}];if(e!=null&&e.columns.length)for(let i=0;i<e.columns.length;i++)s[0].columnSections.push({key:`layers${i}`,label:`Measures layer${i}`,allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1});return s},visualPropEditorDefinition:(t,o,n)=>{var d,b,h,y,m;const{visualProps:a,columns:e}=t,s=f.filter(e,c=>c.type===C.MEASURE),r=f.filter(e,c=>c.type===C.ATTRIBUTE);console.warn(r,s);const u=[{key:"color",type:"radio",defaultValue:"red",values:["red","green","yellow"],label:"Colors"},{type:"section",key:"accordion",label:"Accordion",children:[{key:"datalabels",type:"toggle",defaultValue:!1,label:"Data Labels"}]}];(a==null?void 0:a.length)!==0&&((d=a==null?void 0:a.accordion)!=null&&d.datalabels||(y=(h=(b=a==null?void 0:a.columnVisualProps)==null?void 0:b[n])==null?void 0:h.accordion)!=null&&y.datalabels)&&((m=u[1].children)==null||m.push({key:"Color2",type:"radio",defaultValue:"blue",values:["blue","white","red"],label:"Color2"}));const i={type:C.MEASURE,columnSettingsDefinition:s.reduce((c,g)=>(c[g.id]={elements:[{key:"borderRadius",type:"radio",defaultValue:"5",values:["5","10","15"],label:"Border Radius"},{key:"borderThickness",type:"dropdown",defaultValue:"2",values:["2","4","6","8","10","12","14","16"],label:"Border Thickness"}]},c),{})};return C.MEASURE,s.reduce((c,g)=>(c[g.id]={elements:[{key:"borderRadius",type:"radio",defaultValue:"5",values:["5","10","15"],label:"Border Radius"},{key:"borderThickness",type:"dropdown",defaultValue:"2",values:["2","4","6","8","10","12","14","16"],label:"Border Thickness"}]},c),{}),C.ATTRIBUTE,r.reduce((c,g)=>(c[g.id]={elements:[{key:"borderRadius",type:"radio",defaultValue:"5",values:["5","10","15"],label:"Border Radius"},{key:"borderThickness",type:"dropdown",defaultValue:"2",values:["2","4","6","8","10","12","14","16"],label:"Border Thickness"},{key:"datalabels",type:"checkbox",defaultValue:!1,label:"Datalabel",disabled:!1}]},c),{}),{elements:u,columnsVizPropDefinition:[i]}},validateConfig:(t,o)=>{if(t.length!==1)return{isValid:!1,validationErrorMessage:["invalid config. no config found"]};const n=t[0].dimensions;return n[0].columns.length===0||n[1].columns.length===0?{isValid:!1,validationErrorMessage:["Invalid config. X or Y axis columns cannot be empty."]}:{isValid:!0}},allowedConfigurations:{allowColumnConditionalFormatting:!0}});v(l)})();
