import{g as h,C as s,l as u,a as C}from"./index-94b3058b.js";import"./auto.esm-c3926bfe.js";import{C as v,p}from"./chartjs-plugin-datalabels.esm-3e57def8.js";v.register(p);function M(n){const e=document.getElementById("tml-string-input").value??"";n.emitEvent(s.SetTMLString,{tmlString:e})}async function b(n){var i;const e=await n.emitEvent(s.GetTMLString),o=document.getElementById("tml-box");o&&e&&(o.innerHTML=`<div>
            <input id="tml-string-input" value="${e.data.tmlString}" />
            <button id="submit-button">Submit</button>
        </div>`),(i=document.getElementById("submit-button"))==null||i.addEventListener("click",()=>{M(n)})}async function w(n){const e=n.getChartModel(),i=(e.config.chartConfig??[]).map(a=>u.reduce(a.dimensions,(c,d)=>({queryColumns:[...c.queryColumns,...d.columns].filter(g=>g.type===C.MEASURE)}),{queryColumns:[]})),l=await n.emitEvent(s.GetDataForQuery,{queries:i});console.log("KPI DATA",l);const{columns:t,dataValue:r}=l.data[0].data,m=document.getElementById("kpi-box");if(m){const a=u.reduce(t,(c,d,g)=>{const f=u.find(e.columns,y=>y.id===d);return u.isNil(f)?c:`${c}<div>${f.name}: ${r[0][g]}</div>`},"");m.innerHTML=`
            <div>${a}</div>
        `}}async function I(n){var e,o,i,l;(e=document.getElementById("open-axis-menu"))==null||e.addEventListener("click",t=>{const m=n.getChartModel().columns.map(a=>a.id);n.emitEvent(s.OpenAxisMenu,{event:{clientX:t.clientX,clientY:t.clientY},columnIds:m})}),(o=document.getElementById("open-single-column-menu"))==null||o.addEventListener("click",t=>{const m=n.getChartModel().columns.map(a=>a.id).slice(0,1);n.emitEvent(s.OpenAxisMenu,{event:{clientX:t.clientX,clientY:t.clientY},columnIds:m})}),(i=document.getElementById("close-axis-menu"))==null||i.addEventListener("click",t=>{n.emitEvent(s.CloseAxisMenu)}),(l=document.getElementById("show-event-error"))==null||l.addEventListener("click",t=>{n.emitEvent(s.OpenAxisMenu,{event:{clientX:t.clientX,clientY:t.clientY,x:t.x},columnIds:[]})})}const E=async n=>{try{n.emitEvent(s.RenderStart),await b(n),await w(n),await I(n)}catch(e){n.emitEvent(s.RenderError,{hasError:!0,error:(e==null?void 0:e.message)??"Unknown Error"})}finally{n.emitEvent(s.RenderComplete)}};(async()=>{const n=await h({getDefaultChartConfig:e=>{const o=e.columns,i=u.filter(o,r=>r.type===C.MEASURE);return[{key:"column",dimensions:[{key:"x",columns:[u.filter(o,r=>r.type===C.ATTRIBUTE)[0]]},{key:"y",columns:i.slice(0,2)}]}]},getQueriesFromChartConfig:e=>e.map(i=>u.reduce(i.dimensions,(l,t)=>({queryColumns:[...l.queryColumns,...t.columns]}),{queryColumns:[]})),renderChart:e=>E(e),chartConfigEditorDefinition:[{key:"column",label:"Custom Column",descriptionText:"X Axis can only have attributes, Y Axis can only have measures, Color can only have attributes. Should have just 1 column in Y axis with colors columns.",columnSections:[{key:"x",label:"Custom X Axis",allowAttributeColumns:!0,allowMeasureColumns:!1,allowTimeSeriesColumns:!0,maxColumnCount:1},{key:"y",label:"Custom Y Axis",allowAttributeColumns:!1,allowMeasureColumns:!0,allowTimeSeriesColumns:!1}]}],visualPropEditorDefinition:{elements:[{key:"showError",type:"toggle",defaultValue:!1,label:"Show Error"}]},validateConfig:e=>{if(e.length!==1)return{isValid:!1,validationErrorMessage:["invalid config. no config found"]};const o=e[0].dimensions;return o[0].columns.length===0||o[1].columns.length===0?{isValid:!1,validationErrorMessage:["Invalid config. X or Y axis columns cannot be empty."]}:{isValid:!0}},validateVisualProps:e=>e.showError===!0?{isValid:!1,validationErrorMessage:["Change it to false again!"]}:{isValid:!0}});E(n)})();
